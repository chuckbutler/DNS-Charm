#!/usr/bin/python
import os
import sys
# Add charmhelpers to the system path.
sys.path.insert(0, os.path.abspath(os.path.join(os.environ['CHARM_DIR'],
                                                    'contrib')))

from charmhelpers.core.hookenv import (
    config,
    unit_get,
    relation_get,
    relation_set,
    relation_id,
)
from common import resolve_hostname_to_ip as getip
from common import load_class


class ProgrammableChanged(object):

    def __init__(self):
        self.config = config()
        relid = relation_id()
        relation_set(relid,
                     {'public-address': getip(unit_get('public-address'))})
        if not relation_get('domain'):
            return
        self.add_resource()

    def add_resource(self):
        domain = relation_get('domain')
	# missing relation data - return 0
        alias = relation_get('alias')
        addr = relation_get('addr')
        rr = relation_get('rr').upper()
        if None == domain or len(domain) == 0 or None == addr or len(addr) == 0:
	  return

        parsed = {'domain': domain, 'alias': alias, 'addr': addr, 'rr': rr}

        class_string = '{}.provider.Provider'.format(self.config['provider'])
        provider = load_class(class_string)
        p = provider(domain)
        p.add_record(parsed)


if __name__ == '__main__':
    c = ProgrammableChanged()
